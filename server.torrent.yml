---
# file: server.torrent.yml
#
# DESCRIPTION : Installs http server for ruTorrent
# ANSIBLE VER : 2.0.
# TARGET OS   : Ubuntu 16.04

- name: "Torrent Server"

  hosts: servers.torrent

  vars:

    # Host specific
    # -------------
    # ssl_certs_local_privkey_data: CHANGE_IT
    # ssl_certs_local_cert_data: CHANGE_IT

    # vars shared between roles
    php_fpm_listen: "/var/run/php-fpm.sock"

  pre_tasks:

    - name: "Torrent | Ensure nginx group"
      group: name="{{ nginx_group }}"

    - name: "Torrent | Ensure nginx user"
      user: name="{{ nginx_user }}" group="{{ nginx_group }}"  

  roles:

    - name: "Torrent | web interface | ensure ruTorrent"
      role: ansible-role-rutorrent
      rutorrent_dir_install_group: "{{ nginx_group }}"
      rutorrent_dir_install_owner: "{{ nginx_user }}"

    - name: "Torrent | Ensure self signed openssl certificate"
      role: ansible-role-ssl-certs
      ssl_certs_path_owner: "{{ nginx_user }}"
      ssl_certs_path_group: "{{ nginx_group }}"      
      ssl_certs_generate_dh_param: true

    - name: "Torrent | web interface | ensure Nginx"
      role: ansible-role-nginx
      nginx_configs:
        https:
          - ssl_session_cache  builtin:1000  shared:SSL:10m
          - ssl_protocols  TLSv1 TLSv1.1 TLSv1.2
          - ssl_prefer_server_ciphers on
          - ssl_certificate_key {{ ssl_certs_privkey_path }}
          - ssl_certificate     {{ ssl_certs_cert_path }}
          - ssl_dhparam         {{ ssl_certs_dhparam_path }}      
      nginx_http_params:
        - sendfile on
        - access_log /var/log/nginx/access.log
      nginx_sites:
        default:
          - listen 80
          - server_name localhost
          - location /RPC2 { 
              include scgi_params; 
              scgi_pass 127.0.0.1:5000; 
            }          
        rutorrent:
          - listen 443
          - server_name {{ ansible_fqdn }}
          - root /var/www/rutorrent
          - ssl on
              try_files $uri $uri/ =404; 
            }
          - location ~ \.php$ { 
              fastcgi_split_path_info ^(.+\.php)(/.+)$; 
              fastcgi_pass unix:{{ php_fpm_listen }}; 
              fastcgi_index index.php; 
              fastcgi_param SCRIPT_FILENAME $request_filename; 
              include fastcgi_params; 
            }

    - name: "Torrent | web interface | ensure $PHP"
      role: ansible-role-php
      php_packages:
        - php7.0-cli
        - php7.0-fpm
        - php-geoip
      php_webserver_daemon: "nginx"
      php_enable_php_fpm: true

...
